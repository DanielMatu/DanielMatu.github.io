{"version":3,"sources":["data/projects.js","components/projectPreview/ProjectPreview.jsx","contexts/ProjectContext.js","components/topbar/Topbar.jsx","index.js","pages/home/Home.jsx","pages/project/Project.jsx"],"names":["module","exports","featuredProjects","id","title","thumbnailPath","bulletPoints","videoPath","repoUrl","website","projects","ProjectPreview","isFeatured","className","alt","src","state","ProjectContext","createContext","Topbar","to","style","textDecoration","color","ReactDOM","render","StrictMode","exact","path","component","useContext","map","project","params","useParams","useState","currentProject","setCurrentProject","useEffect","foundProject","undefined","find","projectId","featuredProject","href","autoPlay","muted","controls","type","bulletPoint","i","document","getElementById"],"mappings":"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","file":"static/js/main.1908d754.chunk.js","sourcesContent":["const projects = {\r\n    featuredProjects: [\r\n        {\r\n            id: '0',\r\n            title: 'MERN Social Media',\r\n            thumbnailPath: './images/social media thumbnail.png',\r\n            bulletPoints: [\r\n                \"REST Api with Node Express & MongoDB/Mongoose\",\r\n                \"Modern React with routing, hooks, context, and some material-ui\",\r\n                \"Real-time messenger with Socket.io\",\r\n                \"Encryption & security with bcrypt and helmet\",\r\n                \"Http requests with axios and modern timestamps with timeago.js\"\r\n            ],\r\n            videoPath: '../videos/social media demo.mp4',\r\n            repoUrl: 'https://github.com/DanielMatu/Social-Media',\r\n            website: 'https://dmatu-social-media.herokuapp.com'\r\n        },\r\n\r\n        {\r\n            id: '1',\r\n            title: 'React Tarot',\r\n            thumbnailPath: './images/react tarot thumbnail.png',\r\n            bulletPoints: [\r\n                \"Modern React with routing, hooks & context Api\",\r\n                \"Node & Firebase backend & authentication with JWT\",\r\n                \"SASS/SCSS precompiler\",\r\n                \"Webpack used with several webpack plugins (e.g. DefinePlugin)\",\r\n                \"Secure API key management with dotenv \"\r\n            ],\r\n            videoPath: '../videos/tarot%20preview.mp4',\r\n            repoUrl: 'https://github.com/DanielMatu/React-Tarot',\r\n            website: 'https://dmatu-react-tarot.herokuapp.com'\r\n        }\r\n    ],\r\n    projects: [\r\n        {\r\n            id: '2',\r\n            title: 'Expensify',\r\n            thumbnailPath: './images/expensify thumbnail.png',\r\n            bulletPoints: [\r\n                'React with Redux',\r\n                'Jest & Enzyme Testing',\r\n                'Node & Firebase back end'\r\n            ],\r\n            videoPath: '../videos/expensify preview.mp4',\r\n            repoUrl: 'https://github.com/DanielMatu/react-expensify-app-udemy-',\r\n            website: 'https://dmatu-react-expensify-udemy.herokuapp.com/'\r\n\r\n        },\r\n        {\r\n            id: '4',\r\n            title: 'Node Chat App',\r\n            thumbnailPath: './images/chat app thumbnail.png',\r\n            bulletPoints: [\r\n                \"Real-time chat room with Socket.io \",\r\n                \"Deployed with Heroku\",\r\n                \"Version control with GIT and source tree\",\r\n                \"Runs on Express Node server\"\r\n            ],\r\n            videoPath: '../videos/chat app preview.mp4',\r\n            repoUrl: 'https://github.com/DanielMatu/node-chat-app',\r\n            website: 'https://dmatu-chat-app.herokuapp.com/'\r\n        },\r\n        {\r\n            id: '5',\r\n            title: 'Node Weather App',\r\n            thumbnailPath: './images/weather app thumbnail.png',\r\n            bulletPoints: [\r\n                'Integrated external Apis (Mapbox & Weatherstack)',\r\n                'Runs on Express Node server',\r\n                'Managed views with handlebars.js'\r\n            ],\r\n            videoPath: '../videos/weather preview.mp4',\r\n            repoUrl: 'https://github.com/DanielMatu/nodejs-weather-website-udemy',\r\n            website: 'https://dmatu-weather-application.herokuapp.com/'\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Task Manager (API ONLY)',\r\n            thumbnailPath: './images/favicon.ico',\r\n            bulletPoints: [\r\n                'Back end testing with Supertest',\r\n                'REST Api with express node ',\r\n                'JWT Authentication'\r\n            ],\r\n            videoPath: 'none',\r\n            repoUrl: 'https://github.com/DanielMatu/task-manager-api'\r\n        }\r\n    ]\r\n}\r\n\r\nmodule.exports = projects","import './projectPreview.css'\r\n\r\nexport default function ProjectPreview({ title, thumbnailPath, isFeatured }) {\r\n    return (\r\n        <div className='project'>\r\n            <div className=\"projectTitle\">\r\n                {title}\r\n                {isFeatured &&\r\n                    <span className=\"featuredMark\">&nbsp;*</span>\r\n                }\r\n            </div>\r\n            <img className=\"projectThumbnail\" alt='' src={thumbnailPath} />\r\n        </div>\r\n    )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nimport projects from '../data/projects'\r\nconst state = projects \r\n\r\nexport const ProjectContext = createContext(state)\r\n\r\nexport const ProjectContextProvider = ({ children }) => {\r\n    return (\r\n        <ProjectContext.Provider value={{\r\n            projects : state.projects,\r\n            featuredProjects: state.featuredProjects\r\n        }} >\r\n            {children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import './topbar.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Topbar() {\r\n    return (\r\n        <div>\r\n            <div className=\"topbarContainer\">\r\n                <div className=\"topbarLeft\">\r\n                    <Link to='/' style={{ textDecoration: 'none', color: 'white' }}>\r\n                        <span className=\"logo\">Home</span>\r\n                    </Link>\r\n                </div>\r\n                \r\n                <div className=\"topbarRight\">\r\n                    <div className=\"infoContainer\">\r\n                        <div className=\"name\">Daniel Matu</div>\r\n                        <div className=\"email\">danielmatu859@gmail.com</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport Home from './pages/home/Home'\nimport Project from './pages/project/Project'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/projects/:projectId\" component={ Project } />\n\n\n        </Switch>\n    </Router>  \n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","import './home.css'\r\nimport ProjectPreview from '../../components/projectPreview/ProjectPreview'\r\nimport { Link } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport { ProjectContext } from '../../contexts/ProjectContext'\r\nimport Topbar from '../../components/topbar/Topbar'\r\n\r\nexport default function Home() {\r\n\r\n    const { projects, featuredProjects } = useContext(ProjectContext)\r\n    return (\r\n        <>\r\n            <Topbar />\r\n\r\n            <div className=\"featuredSection\">\r\n                <div className=\"sectionTitle\">Featured Projects <span className=\"featuredMark\">*</span> </div>\r\n                <hr />\r\n                <br />\r\n                <div className=\"featuredProjects\">\r\n                    {\r\n                        featuredProjects.map(project => (\r\n                            <Link key={project.id} to={'/projects/' + project.id} style={{ textDecoration: 'none' }}>\r\n                                <ProjectPreview title={project.title} thumbnailPath={project.thumbnailPath} isFeatured={true} />\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"projectSection\">\r\n                <div className=\"sectionTitle\">Projects</div>\r\n                <hr />\r\n                <br />\r\n\r\n                <div className=\"projects\">\r\n                    {\r\n                        projects.map(project => (\r\n                            <Link key={project.id} to={'/projects/' + project.id} style={{ textDecoration: 'none' }}>\r\n                                <ProjectPreview title={project.title} thumbnailPath={project.thumbnailPath} isFeatured={false} />\r\n                            </Link>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import './project.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { ProjectContext } from '../../contexts/ProjectContext'\r\nimport { Link } from 'react-router-dom'\r\nimport Topbar from '../../components/topbar/Topbar'\r\n\r\n\r\nexport default function Project() {\r\n\r\n    const { projects, featuredProjects } = useContext(ProjectContext)\r\n    const params = useParams()\r\n    const [currentProject, setCurrentProject] = useState()\r\n\r\n    useEffect(() => {\r\n        let foundProject\r\n        foundProject = projects.find(project => project.id === params.projectId)\r\n        if (foundProject === undefined) {\r\n            foundProject = featuredProjects.find(featuredProject => featuredProject.id === params.projectId)\r\n        }\r\n        setCurrentProject(foundProject)\r\n    }, [params])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <div className=\"githubSection\">\r\n                <div className=\"projectPageTitle\">{currentProject?.title}</div>\r\n                <a className='githubLink' href={currentProject?.repoUrl}>repository</a>\r\n                &nbsp;\r\n                &nbsp;\r\n                &nbsp;\r\n                <a className='githubLink' href={currentProject?.website}>site </a>\r\n            </div>\r\n            {\r\n                currentProject?.videoPath !== 'none' &&\r\n                <div className=\"videoSection\">\r\n                    <video autoPlay muted controls className='video'>\r\n                        {\r\n                            currentProject &&\r\n                            <source src={currentProject.videoPath} type=\"video/mp4\" />\r\n\r\n                        }\r\n                        Your browser does not support the video tag.\r\n                    </video>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                currentProject?.videoPath === 'none' &&\r\n                 <div> &nbsp; &nbsp; &nbsp; Preview not available.</div>\r\n            }\r\n\r\n            <div className=\"descriptionSection\">\r\n                <div className=\"descriptionHeader\">Skills Used:</div>\r\n                <ul className=\"descriptionNotes\">\r\n                    {currentProject?.bulletPoints.map((bulletPoint, i) => (\r\n                        <li className='descriptionBullets' key={i}>\r\n                            {bulletPoint}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}